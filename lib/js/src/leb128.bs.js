// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';


function encodeU(num) {
  var bytes = function (rest) {
    var part = rest & 127;
    var rest$1 = (rest >> 7);
    if (rest$1 > 0) {
      return /* :: */[
              part ^ 128,
              bytes(rest$1)
            ];
    } else {
      return /* :: */[
              part,
              /* [] */0
            ];
    }
  };
  return bytes(num);
}

function numBits(num) {
  if (num < 0) {
    var _rest = num;
    var _bits = 0;
    while(true) {
      var bits = _bits;
      var rest = _rest;
      if (rest === -1) {
        return bits;
      } else {
        _bits = bits + 1 | 0;
        _rest = (rest >> 1);
        continue ;
        
      }
    };
  } else {
    var _rest$1 = num;
    var _bits$1 = 0;
    while(true) {
      var bits$1 = _bits$1;
      var rest$1 = _rest$1;
      if (rest$1) {
        _bits$1 = bits$1 + 1 | 0;
        _rest$1 = (rest$1 >> 1);
        continue ;
        
      } else {
        return bits$1;
      }
    };
  }
}

function encodeS(num) {
  var bytes = function (rest, bitsLeft) {
    var part = rest & 127;
    var rest$1 = (rest >> 7);
    if (bitsLeft > 7) {
      return /* :: */[
              part ^ 128,
              bytes(rest$1, bitsLeft - 7 | 0)
            ];
    } else {
      return /* :: */[
              part,
              /* [] */0
            ];
    }
  };
  return bytes(num, numBits(num) + 1 | 0);
}

exports.encodeU = encodeU;
exports.numBits = numBits;
exports.encodeS = encodeS;
/* No side effect */
